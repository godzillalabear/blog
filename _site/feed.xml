<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-07-10T15:52:19+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">邊開火  |  邊放火</title><subtitle>Fire and motion</subtitle><author><name>哥吉拉拉熊</name></author><entry><title type="html">我想要換名字！！— Rails 6 專案改名</title><link href="http://localhost:4000/rails/2020/07/08/change-rails-6-project-name.html" rel="alternate" type="text/html" title="我想要換名字！！— Rails 6 專案改名" /><published>2020-07-08T00:00:00+08:00</published><updated>2020-07-09T05:38:53+08:00</updated><id>http://localhost:4000/rails/2020/07/08/change-rails-6-project-name</id><content type="html" xml:base="http://localhost:4000/rails/2020/07/08/change-rails-6-project-name.html">&lt;p&gt;要想出一個好的專案名稱真的好難，前陣子 Demo Day 專案的名稱也為了取名問題卡很久，為了不浪費時間，先 new 了一個專案，後來才想到好名字，想要改名的時候，卻怕漏改東西，該怎麼辦才好呢？&lt;/p&gt;

&lt;p&gt;在網路上搜尋 &lt;strong&gt;rails 專案改名&lt;/strong&gt;的相關關鍵字，通常第一個就會叫你裝套件 &lt;a href=&quot;https://github.com/morshedalam/rename&quot;&gt;rename&lt;/a&gt;，但這些文章通常都年代久遠，而且這個套件也已經三年沒更新了。
在舊的版本的 Rails 專案中，專案中很多 class 都有專案名稱作為 namespace 在前面，像是這樣：&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#config/routes.rb&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;MyProject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;當我們要修改專案名稱時，就需要一個一個改很麻煩，所以才會需要 rename 這個套件，但到了 Rails 6，這些東西都被改成下面這樣了：&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#config/routes.rb&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;所以現在專案裡面也不會有太多跟 my_project 有關的東西了！&lt;/p&gt;

&lt;p&gt;那這樣有什麼東西需要改呢？
第一個就是專案最上層的資料夾名稱了！我們除了可以透過本來作業系統的圖形化介面改資料夾名稱外，我們也可以透過終端機執行&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ &lt;span class=&quot;nb&quot;&gt;mv &lt;/span&gt;my_project better_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;除了專案的最上層資料夾名稱外，我們可以在終端機下指令去尋找專案資料夾底下所有檔案有沒有跟專案名稱一樣的內容&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;❯ &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ri&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--exclude-dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;={&lt;/span&gt;node_modules,public,log,tmp&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'my.*project'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grep 關鍵字 路徑&lt;/code&gt; 這個指令可以尋找檔案或資料夾裡面有沒有符合關鍵字的部分，&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; 可以往下層資料夾每一層都找，&lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; 是不在乎關鍵字的大小寫，而關鍵字也可以用正規表達式來寫。以專案名稱 my_project 來說，在 Rails 專案裡面，可能會變成 MyProject 這樣的形式，所以我們的正規表達式要寫成 &lt;code class=&quot;highlighter-rouge&quot;&gt;'my.*project’&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;.*&lt;/code&gt; 代表零到多個任意字元，而最後面的&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;代表現在所在位置的路徑。&lt;/p&gt;

&lt;p&gt;在 Rails 6 專案中，&lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; 與 &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; 分別存放我們需要用的套件跟 webpack 打包的檔案，而 &lt;code class=&quot;highlighter-rouge&quot;&gt;log&lt;/code&gt; 紀錄我們程序執行的過程，&lt;code class=&quot;highlighter-rouge&quot;&gt;tmp&lt;/code&gt; 資料夾中放的是暫存檔案，上述的 4 個資料夾內容都很多而且跟專案名稱不會有太大的關係，所以我們利用 &lt;code class=&quot;highlighter-rouge&quot;&gt;--exclude-dir={node_modules,public,log,tmp}&lt;/code&gt; 來排除他們，讓搜尋這件事不會浪費資源做太久。&lt;/p&gt;

&lt;p&gt;下完指令就可以看到終端機告訴我們哪些檔案中有內容需要改名囉！&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./app/views/layouts/application.html.erb:    &amp;lt;title&amp;gt;MyProject&amp;lt;/title&amp;gt;
./config/cable.yml:  channel_prefix: my_project_production
./config/application.rb:module MyProject
./config/database.yml:  database: my_project_development
./config/database.yml:  database: my_project_test
./config/database.yml:  database: my_project_production
./package.json:  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;my_project&quot;&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一一去修改這些檔案中有專案名字的部分，就不會漏掉東西少改了！
最最重要一定要記得改的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;./app/views/layouts/application.html.erb&lt;/code&gt; 中的標題，因為這會顯示在瀏覽器上方的標題，另外一個要記得改的是 &lt;code class=&quot;highlighter-rouge&quot;&gt;./config/application.rb&lt;/code&gt; 中的 module 名稱喔～&lt;/p&gt;

&lt;p&gt;到了 Rails 6 ，我們可以發現其實改名要修改的東西真的不多，很簡單。這樣以後就算 &lt;code class=&quot;highlighter-rouge&quot;&gt;rails new&lt;/code&gt; 下錯名字也不用擔心了！&lt;/p&gt;

&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.adamscott.io/blog/2014/01/21/renaming-a-ruby-on-rails-application/&quot;&gt;Renaming a Ruby on Rails Application - Adam Scott&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/15591791/effectively-renaming-a-rails-project&quot;&gt;refactoring - Effectively Renaming a Rails Project - Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/morshedalam/rename&quot;&gt;GitHub - morshedalam/rename: To rename rails application&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>哥吉拉拉熊</name></author><summary type="html">要想出一個好的專案名稱真的好難，前陣子 Demo Day 專案的名稱也為了取名問題卡很久，為了不浪費時間，先 new 了一個專案，後來才想到好名字，想要改名的時候，卻怕漏改東西，該怎麼辦才好呢？</summary></entry><entry><title type="html">什麼是 bare repo?</title><link href="http://localhost:4000/git/2020/06/18/what-is-a-bare-repo.html" rel="alternate" type="text/html" title="什麼是 bare repo?" /><published>2020-06-18T00:00:00+08:00</published><updated>2020-06-19T00:46:17+08:00</updated><id>http://localhost:4000/git/2020/06/18/what-is-a-bare-repo</id><content type="html" xml:base="http://localhost:4000/git/2020/06/18/what-is-a-bare-repo.html">&lt;p&gt;除了平常 &lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; 之後可以建立一個 git repository 之外，你知道 &lt;code class=&quot;highlighter-rouge&quot;&gt;git --bare init &lt;/code&gt; 會發生什麼事嗎？
首先，我們先來聊聊 bare repository 跟平常的 repository 有什麼差別吧！&lt;/p&gt;

&lt;p&gt;做過 &lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; 的專案， git 就可以幫你做版本控制，這種帶有一個&lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt;資料夾跟其他檔案的工作目錄可以叫做 working directory，但其實還有另外一種沒有工作目錄的儲存庫 — bare repository （裸儲存庫）。一個 bare repository 就好像單純的 &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; 資料夾一樣，他存了經過 git 計算與壓縮後的比對結果，commit 紀錄等等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/OIEUL7V.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一個經過 &lt;code class=&quot;highlighter-rouge&quot;&gt;git --bare init&lt;/code&gt; 的資料夾會自己生出這些東西。需要注意的是，一般慣例上來說，bare repo 的資料夾名稱會以 &lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt; 結尾。&lt;/p&gt;

&lt;p&gt;那什麼時候該用裸儲存庫，什麼時候該用一般的儲存庫呢？&lt;/p&gt;

&lt;p&gt;如果你的專案只是自己要用，那就用一般的儲存庫就好了，或是你也可以透過 GitHub、Gitlab 等原始碼代管服務平台來幫你的專案做分享。但是如果你不想用別人的平台來做分享，就可以透過 bare repo 來進行分享。在一台 server 上建立 bare repo，擁有 server 存取權限的人就可以透過 git push 把本地端的專案推上去，也可以通過 clone、pull 把專案拉下來。不過，一個 bare repo 中是沒有原本專案的那些程式碼檔案的，他沒有 working tree，所以不可以對他生出新的 commit 。&lt;/p&gt;

&lt;p&gt;所以說當你要工作的時候，就用一般的儲存庫，當你要分享的時候，就要使用 bare repo。&lt;/p&gt;

&lt;p&gt;參考資料：&lt;a href=&quot;https://www.saintsjd.com/2011/01/what-is-a-bare-git-repository/&quot;&gt;What is a bare git repository? Jon Saints&lt;/a&gt;&lt;/p&gt;</content><author><name>哥吉拉拉熊</name></author><summary type="html">除了平常 git init 之後可以建立一個 git repository 之外，你知道 git --bare init 會發生什麼事嗎？ 首先，我們先來聊聊 bare repository 跟平常的 repository 有什麼差別吧！</summary></entry><entry><title type="html">要如何寫一篇英文演講稿</title><link href="http://localhost:4000/english/2020/05/10/how-to-do-a-english-speach.html" rel="alternate" type="text/html" title="要如何寫一篇英文演講稿" /><published>2020-05-10T00:00:00+08:00</published><updated>2020-05-11T04:36:22+08:00</updated><id>http://localhost:4000/english/2020/05/10/how-to-do-a-english-speach</id><content type="html" xml:base="http://localhost:4000/english/2020/05/10/how-to-do-a-english-speach.html">&lt;p&gt;在母親節的午餐時間收到前家教學生的訊息，問我可不可以幫高中生寫一篇一分半的英文演講稿，內容是關於新冠肺炎對於生活的影響。我想對於在台灣這樣的&lt;del&gt;填鴨式&lt;/del&gt;學校英文教育出來的學生，這是一個天大的難題吧！機會難得，就來聊聊如何寫講稿吧！&lt;/p&gt;

&lt;p&gt;寫講稿其實跟寫英文作文截然不同，你可以放很多語助詞，你可以把句子寫的短短的，你可以說： I see people on the street. They are all wearing masks. 而不是， I see people who wear masks on the street. 所以忘掉名詞子句、形容詞子句、副詞子句都沒有關係，用最簡單的句子來說話，對聽的人來說也是最簡單的。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=8S0FDjFBj8o&quot;&gt;How to sound smart in your TEDx Talk  Will Stephen  TEDxNewYork - YouTube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Youtube 上有個點閱很高的 TED Talk （別擔心，他有中文字幕^^），標題看起來是在教你如何讓別人覺得你很會演講，實際上裡面都在搞笑，但在看更仔細一點，他描述了很多演講的小技巧，學起來受用無窮。&lt;/p&gt;

&lt;p&gt;演講的一開始你可以向觀眾提問，讓問題引導觀眾到你的主題。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Do you think coronavirus has changed your life a lot?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;你可以簡單描述一下現況，例如我現在上學都要戴口罩，進教室都要量體溫。
然後你可以說個可愛的故事吸引大家注意。&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Last month I saw a news about checking body temperature. A man walked in a police office. The police officer had alcohol in his left hand and a forehead thermometer in another had. He asked to take the man’s temperature.  Then he raised his left hand in front of the man’s forehead and sprayed alcohol right into his eyes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;接下來，你可以放一張藥師辛苦發口罩的照片給大家看。
&lt;img src=&quot;https://i.imgur.com/jdlWDCL.jpg&quot; alt=&quot;&quot; /&gt;
圖片來源：&lt;a href=&quot;https://www.chinatimes.com/realtimenews/20200308003366-260405?chdtv&quot;&gt;中時電子報&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a picture of people lining up to buy masks. Since the outbreak, it’s not easy to buy masks in a pharmacy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;同時，數字是吸引觀眾最好的方式。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you don’t believe me. Let’s look at these numbers. This is a real thing that happens right now.
The coronavirus has infected more the 4 million people in the world and has caused two hundred and eighty thousand deaths.
People needed to spend 30~60 minutes to buy masks. For people in other countries, they might not  have any masks left.
With your mask on, the possibility you get infected will be 50% lower .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;數字永遠都是說明情況最簡單明瞭的方法。如果需要，你也可以用一些圖表來支持你的想法。&lt;/p&gt;

&lt;p&gt;最後你可以下個結論，說說新冠肺炎帶給你生活的改變。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I form a habit of washing my hand every time I get back home. I wear mask and check my temperature every. And I buy things online more often. Online shopping is such a black hole.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;寫英文講稿其實不用太拘謹，文法不會也沒有關係，&lt;del&gt;反正快快講過去，也沒有人注意你時態有沒有用錯&lt;/del&gt;。
只要動動筆開始寫，就沒有你想像中的那麼難了。&lt;/p&gt;

&lt;p&gt;參考資料：&lt;a href=&quot;https://www.worldometers.info/&quot;&gt;Worldometer - real time world statistics&lt;/a&gt;&lt;/p&gt;</content><author><name>哥吉拉拉熊</name></author><summary type="html">在母親節的午餐時間收到前家教學生的訊息，問我可不可以幫高中生寫一篇一分半的英文演講稿，內容是關於新冠肺炎對於生活的影響。我想對於在台灣這樣的填鴨式學校英文教育出來的學生，這是一個天大的難題吧！機會難得，就來聊聊如何寫講稿吧！</summary></entry><entry><title type="html">淺談 JS map() 與 callback function</title><link href="http://localhost:4000/javascript/2020/05/09/map-and-callback-function.html" rel="alternate" type="text/html" title="淺談 JS map() 與 callback function" /><published>2020-05-09T00:00:00+08:00</published><updated>2020-05-10T12:56:45+08:00</updated><id>http://localhost:4000/javascript/2020/05/09/map-and-callback-function</id><content type="html" xml:base="http://localhost:4000/javascript/2020/05/09/map-and-callback-function.html">&lt;p&gt;本篇懶人包：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;在 JavaScript 中，像是 map 這種可以把函式當參數傳進函式中運用的函式叫做「高級函式」，如果想要傳進去的參數而不是直接執行的話就要寫成 &lt;code class=&quot;highlighter-rouge&quot;&gt;[1, 2, 3, 4, 5].map(addOne)&lt;/code&gt; ，而不是 &lt;code class=&quot;highlighter-rouge&quot;&gt;[1, 2, 3, 4, 5].map(addOne(num))&lt;/code&gt; ，後面這種寫法會讓 addOne 這個函式在 map 被執行前先執行完，而不是對前面的陣列作用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;在 JavaScript 中，&lt;code class=&quot;highlighter-rouge&quot;&gt;map()&lt;/code&gt; 函式可以將陣列中的每個元素丟到 callback function做計算，這樣就不需要用迴圈了，超方便的！&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;new_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;new_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;你看！只要一行就好了！&lt;/p&gt;

&lt;p&gt;但方便之前，要先來看看怎麼用。
從&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;MDN&lt;/a&gt;的說明來看使用方法，&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;new_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// return element for new_array&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}[,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;thisArg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; 函式會把回傳給一個新的陣列，所以我們可以用 &lt;code class=&quot;highlighter-rouge&quot;&gt;new_array&lt;/code&gt; 來接這個回傳值&lt;/li&gt;
  &lt;li&gt;執行 &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; 函式時，他會呼叫裡面的 callback function ，這個 callback function 會對 &lt;code class=&quot;highlighter-rouge&quot;&gt;arr&lt;/code&gt; 中的&lt;strong&gt;元素&lt;/strong&gt;作用。在這裡要注意的是，callback function 只會對裡面的一個一個元素作用，就好像 &lt;code class=&quot;highlighter-rouge&quot;&gt;map&lt;/code&gt; 函式已經自帶 for 迴圈一樣，所以我們在寫 callback function 的時候只要在乎我們對單一元素想要做的變化就好。&lt;/li&gt;
  &lt;li&gt;使用方法裡面的 &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt; 非必填欄位。已 callback function 來說，第一個填進去的參數代表 currentValue，如果你不想處理整個陣列，可以填入第二個參數，代表 index。如果你想要處理二維陣列，那你就可以在參數填入陣列 ^^&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt; 中寫的就是 callback function 的內容&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;依照上面的使用方法，我們可以寫出這樣的程式碼&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;new_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;new_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在 JavaScript 中，有命名函式 &lt;code class=&quot;highlighter-rouge&quot;&gt;function funcABC(a){}&lt;/code&gt; ，也有匿名函式 &lt;code class=&quot;highlighter-rouge&quot;&gt;function(a){}&lt;/code&gt;，更有箭號函式 &lt;code class=&quot;highlighter-rouge&quot;&gt;() =&amp;gt; {}&lt;/code&gt; （好像小學照樣照句 www ），所以我們的 callback function 也可以用箭號函式寫：&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果參數只有一個可以省略小括弧，如果函式內容只有一行，那就可以省略花括號，所以就可以寫成我們最一開始的樣子，這時 &lt;code class=&quot;highlighter-rouge&quot;&gt;i + 1&lt;/code&gt; 就成為我們的回傳值&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;除了上述幾種寫法（已經好多種了），還有一種是把 callback function 定義在函式外面：&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;什麼？為什麼現在 function 放那邊可以不用加參數在後面？
這是我一開始一直搞不清楚的疑問。
在 JavaScript 中，像是 map 這種可以把函式當參數傳進函式中運用的函式叫做「高級函式」，如果想要傳進去的參數而不是直接執行的話就要寫成 &lt;code class=&quot;highlighter-rouge&quot;&gt;[1, 2, 3, 4, 5].map(addOne)&lt;/code&gt; ，而不是 &lt;code class=&quot;highlighter-rouge&quot;&gt;[1, 2, 3, 4, 5].map(addOne(num))&lt;/code&gt; ，後面這種寫法會讓 addOne 這個函式在 map 被執行前先執行完，而不是對前面的陣列&lt;code class=&quot;highlighter-rouge&quot;&gt;[1, 2, 3, 4 ,5]&lt;/code&gt;作用。像這種把函式當成參數丟入另外一個函式，是在 functional programming 中才能做到的事喔！&lt;/p&gt;

&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.discovermeteor.com/blog/understanding-javascript-map/&quot;&gt;Understanding JavaScript’s map() - Discover Meteor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/13286233/pass-a-javascript-function-as-parameter&quot;&gt;Pass a JavaScript function as parameter - Stack Overflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Array.prototype.map() - JavaScript  MDN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;箭頭函式 - JavaScript  MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>哥吉拉拉熊</name></author><summary type="html">本篇懶人包： 在 JavaScript 中，像是 map 這種可以把函式當參數傳進函式中運用的函式叫做「高級函式」，如果想要傳進去的參數而不是直接執行的話就要寫成 [1, 2, 3, 4, 5].map(addOne) ，而不是 [1, 2, 3, 4, 5].map(addOne(num)) ，後面這種寫法會讓 addOne 這個函式在 map 被執行前先執行完，而不是對前面的陣列作用。</summary></entry></feed>